<?php

/* 
 * hook_menu()
 */
function ajodo_login_menu() {
	$items = array();
	
	$items['ajodo'] = array(
	  'title' => 'ajodo auto login test33',
	  'page callback' => 'ajodo_login_test',
	  'access callback' => 'user_access',
	  'access arguments' => array('access content'),
	  //'file' => 'includes/library_sync_netforum.inc',
	);
  $items['node/%webform_menu/webform-results/submissions22'] = array(
    'title' => 'Submissions22',
    'page callback' => 'seeSubs',
    //'page arguments' => array(1, FALSE, '50'),
    'access callback' => 'webform_results_access',
    'access arguments' => array(1),
    'file' => 'admin_menu.inc',
    'weight' => 16,
    'type' => MENU_LOCAL_TASK,
  );	
	return $items;
}



function seeSubs() {
  
  $content['raw_markup'] = array(
    '#type' => 'markup',
    '#markup' => '<p>username'. $username . '</p><p>password' . $password . "</P>" . $output,
  );
  return $content;  
}



function ajodo_login_test() {
 /* $to      = 'abaum@aaortho.org';
$subject = 'the subject';
$message = 'hello';
$headers = 'From: webmaster@example.com' . "\r\n" .
    'Reply-To: webmaster@example.com' . "\r\n" .
    'X-Mailer: PHP/' . phpversion();
ini_set ( "SMTP", "webmail.aaomembers.org" );
date_default_timezone_set('America/New_York');

mail($to, $subject, $message, $headers);*/
/*if($img = @getimagesize("https://nf.aaomembers.org/eweb/photos/2009303.jpg")) {
  echo "yes";
} else {
  echo "no";
}*/
      require_once 'swift/lib/swift_required.php';
      $encoder = new Swift_Encoder_Base64Encoder;
      //$password = $encoder->encodeString("langley99");
      //$username = $encoder->encodeString("robert.lee@aaomembers.org");
      //telnet ip port
      //ehlo domain.com
      //auth login
      //encoded usernam
      //encoded password
      //
 module_load_include("inc", "ajodo_login", "mail");
 $mail = new email_mail();
 //$mail->login();
 //echo "shoot";
//$mail->get(1);
$output = "<pre>" . print_r($mail->get(1),true) . "</pre>";
//
//$mail->send_mail("abaum@aaortho.org", "hello", "this is a test message");
$mail->close();
  $content['raw_markup'] = array(
    '#type' => 'markup',
    '#markup' => '<p>username'. $username . '</p><p>password' . $password . "</P>" . $output,
  );
  
  return $content;

}
	/*ini_set('display_errors', '1');
	/* connect to netforum */
	/*
	$nfxweb = new SoapClient("http://nf.aaomembers.org/netForumAAOTEST/xweb/Secure/netFORUMXML.asmx?WSDL",Array('trace'=>true,'exceptions'=>true ));  //these are the params set in the constructor
	$authReqParams = Array('userName'=>'abaum', 'password' => 'baum55');
	$responseHeaders = '';
	 try{	//run the soap call to get it - with the headers.  	
		 $response = $nfxweb->__SoapCall("Authenticate", array('parameters'=>$authReqParams), null,null, $responseHeaders);	
		 $authToken = $responseHeaders['AuthorizationToken']->Token;	
		 $xwebNamespace = $response->AuthenticateResult;
	 } 
 	 catch(SoapFault $exception) {
 		watchdog('Soap Login Error',"Soap Connection Error: %error", array('%error'=>$exception),WATCHDOG_INFO,null);
		return false;
 	 } 
	/* xweb updateFacadeObject request 
	 try { //for the xml make the first tag the object name plural and then object name with any fields from the table associated
	 //with the object
	 	$insert_facade_xml = "<Individuals><Individual><ind_first_name>alan_test_4</ind_first_name></Individual></Individuals>";
		$oUpdateNode = new SoapParam("this", "doesntmatter"); //this is present in every example I don't understand why yet
		$oUpdateNode->any = $insert_facade_xml;
		$authHeaders = new SoapHeader($xwebNamespace, 'AuthorizationToken', Array('Token'=>$authToken), true);
		$authReqParams = Array('szObjectName'=>'Individual','szObjectKey'=>"fccedfc8-5db5-485c-881c-f7225616022c", 'oNode'=>$oUpdateNode);		
		$response = $nfxweb->__SoapCall("UpdateFacadeObject", array('parameters'=>$authReqParams), null,$authHeaders, $responseHeaders);	
		echo 'Request XML: <br/><xmp>', $nfxweb->__getLastRequest(), '</xmp><br/><br/> Error Message : <br/>';
	 }
	 catch(SoapFault $exception) {
			echo $exception;
	 } 

	echo "<pre>" . print_r($response,true) . "</pre>";
	
	
	
	

	//$key = pack('H*', str_pad($key, 16*2, '0'));
	//$key = base64_decode(bin2hex($key));
	$key = base64_decode(str_pad($key, 16*2, '0')); //combine this into one above was redundant
	$encryptedkey = encryptText($plaintext, $key);
	$urlString = "http://www.ajodo.org?tpstoken=139." . urlencode($encryptedkey);
	$content = array();
	
	$content['raw_markup'] = array(
	  '#type' => 'markup',
	  '#markup' => '<p><a href="'.$urlString.'">AJODO Auto login</a></p><p>plaintext:' . $plaintext . '</p>'
	  	. "<p>Encrypted Key: " . $encryptedkey . "</p><p>Encoded url: " . urlencode($encryptedkey) . "</p>",
	);
	
	return $content;
}
function encryptText($plainText, $key) {
    $padded = pkcs5_pad($plainText, mcrypt_get_block_size("tripledes", "ecb"));
    $encText = mcrypt_encrypt(MCRYPT_TRIPLEDES, $key, $padded,MCRYPT_MODE_ECB);
    return base64_encode($encText);
}

function decryptText($encryptText, $key) {

    $cipherText = base64_decode($encryptText);
	
    $res = mcrypt_decrypt("tripledes", $key, $cipherText, "cbc", $key);

    $resUnpadded = pkcs5_unpad($res);

    return $resUnpadded;
}


function pkcs5_pad ($text, $blocksize)
{
    $pad = $blocksize - (strlen($text) % $blocksize);
    return $text . str_repeat(chr($pad), $pad);
}

function pkcs5_unpad($text)
{
    $pad = ord($text{strlen($text)-1});
    if ($pad > strlen($text)) return false;
    if (strspn($text, chr($pad), strlen($text) - $pad) != $pad) return false;
    return substr($text, 0, -1 * $pad);
}*/
